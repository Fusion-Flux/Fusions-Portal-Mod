plugins {
	id("org.quiltmc.loom") version "1.1.+"
	id("org.ajoberstar.grgit") version "4.1.0"
}

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = archives_base_name
version = "$mod_version-rev.${grgit.head().abbreviatedId}"
group = maven_group

repositories {
	maven { url = "https://maven.terraformersmc.com/releases" } // Mod Menu
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://mvn.devos.one/snapshots/" } // SCRT
	maven { url = "https://maven.ladysnake.org/releases" } // CCA
	maven { url = "https://maven.gegy.dev" } // LDL
	maven { url = "https://maven.parchmentmc.org" }
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
	maven { url = "https://maven.tterrag.com" } // Flywheel and Registrate
	maven { url = "https://maven.createmod.net" } // Ponder and Catnip
	maven { url = "https://jitpack.io/" } // Mixin Extras
}

dependencies {
	// Setup
	minecraft("com.mojang:minecraft:$minecraft_version")
	mappings(loom.layered {
		mappings("org.quiltmc:quilt-mappings:$minecraft_version+build.$qm_version:intermediary-v2")
		parchment("org.parchmentmc.data:parchment-$parchment_version@zip")
		officialMojangMappings { nameSyntheticMembers = false }
	})
	modImplementation("org.quiltmc:quilt-loader:$loader_version")

	// Dependencies
	modImplementation("org.quiltmc.quilted-fabric-api:quilted-fabric-api:$qfapi_version-$minecraft_version")
	modImplementation(include("io.github.tropheusj.stonecutter_recipe_tags:fabric:5.2.0+1.19.4.fabric")) { transitive = false }
	modImplementation(include("maven.modrinth:gravity-api:$gravity_api_version"))
	modImplementation(include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:$cca_version"))
	modImplementation(include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:$cca_version"))
	modImplementation(include("maven.modrinth:midnightlib:$midnight_lib_version-quilt"))
	modImplementation(include("maven.modrinth:json-entity-animation:$jea_version"))
	modImplementation(include("maven.modrinth:no-indium:$no_indium_version"))
	implementation(include("net.objecthunter:exp4j:0.4.8")) // Velocity Helper math
	annotationProcessor(modImplementation(include("com.github.LlamaLad7.MixinExtras:mixinextras-fabric:$mixin_extras_version")))

	// Compat
	modImplementation("com.terraformersmc:modmenu:$mod_menu_version")

	modImplementation("com.jozufozu.flywheel:flywheel-fabric-$minecraft_version:$flywheel_version")
	modImplementation("net.createmod.catnip:Catnip-Fabric-$minecraft_version:$catnip_version")
	modImplementation("net.createmod.ponder:Ponder-Fabric-$minecraft_version:$ponder_version")
	modLocalRuntime("org.quiltmc.quilted-fabric-api:quilted-fabric-api-deprecated:$qfapi_version-$minecraft_version") // flywheel uses deprecated api

	modCompileOnly("maven.modrinth:visiblebarriers:$vb_version")
	modCompileOnly("dev.lambdaurora:lambdynamiclights:$ldl_version")
	modCompileOnly("com.github.Virtuoel:Pehkui:$pehkui_version")
	modCompileOnly("maven.modrinth:rayon:$rayon_version-fabric")
	modCompileOnly("maven.modrinth:sodium:$sodium_version")
}

loom {
	accessWidenerPath.set(file("src/main/resources/portalcubed.accesswidener"))
	runs {
		create("datagen") {
			client()
			name("Data Generation")
			vmArg("-Dfabric-api.datagen")
			vmArg("-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}")
			vmArg("-Dfabric-api.datagen.modid=portalcubed")
		}
	}
}

sourceSets {
	main {
		resources {
			srcDir("src/generated/resources")
			exclude("src/generated/resources/.cache")
		}
	}
}

tasks.processResources {
	inputs.property("version", project.version)

	filesMatching("quilt.mod.json") {
		expand("version": project.version)
	}
}

tasks.compileJava {
	options.encoding = "UTF-8"
	options.release.set(17)
}

java {
	withSourcesJar()
}

tasks.jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
}
