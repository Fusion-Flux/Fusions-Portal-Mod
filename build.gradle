plugins {
	id 'org.quiltmc.loom' version '1.0.+'
	id 'org.ajoberstar.grgit' version '4.1.0'
	id 'checkstyle'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-rev.${grgit.head().abbreviatedId}"
group = project.maven_group

repositories {
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://www.cursemaven.com" }
	maven { url = "https://maven.terraformersmc.com/releases" }
	maven { url = "https://hephaestus.dev/release" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.tterrag.com/" }
	maven { url = "https://mvn.devos.one/snapshots/" }
	maven { url = "https://maven.willbl.dev/releases/" }
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}

	maven {
		url = 'https://repo.sleeping.town'
		content {
			includeGroup 'com.unascribed'
		}
	}

	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		name = "AlexIIL"
		url = "https://maven.alexiil.uk/"
	}
	maven {
		name = 'Gegy'
		url = 'https://maven.gegy.dev'
	}

	maven { url = "https://lazurite.dev/maven" }

	maven { url = "https://jitpack.io/" }
}

dependencies {
	minecraft "com.mojang:minecraft:$project.minecraft_version"
	mappings "org.quiltmc:quilt-mappings:${minecraft_version}+build.${mappings_version}:intermediary-v2"

	modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"
	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${project.quilted_version}-${minecraft_version}"

	modImplementation ("com.terraformersmc:modmenu:${project.mod_menu_version}"){
		exclude group: "net.fabricmc.fabric-api"
		exclude group: "net.fabricmc"
	}

	modApi include("maven.modrinth:stonecutter_recipe_tags:4.2.1-fabric")

	modApi include("com.unascribed:lib39-core:1.4.2")
	modApi include("com.unascribed:lib39-recoil:1.4.2")

	modImplementation include ("maven.modrinth:gravity-api:${project.gravity_api_version}"){
		exclude group: "net.fabricmc.fabric-api"
		exclude group: "net.fabricmc"
		exclude group: "dev.onyxstudios.cardinal-components-api"
	}

	modImplementation include ("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.0.2") {
		exclude group: "net.fabricmc.fabric-api"
		exclude group: "net.fabricmc"
	}

	include modImplementation("com.github.LlamaLad7.MixinExtras:mixinextras-fabric:0.2.0-beta.5")
	annotationProcessor("com.github.LlamaLad7.MixinExtras:mixinextras-fabric:0.2.0-beta.5")

	include modImplementation("maven.modrinth:midnightlib:1.0.0-quilt")

	modCompileOnly "com.simibubi.create:create-fabric-1.19.2:0.5.0.i-930+1.19.2"
	modCompileOnly "amymialee:visible-barriers:1.5.3+1.19.x"

	include implementation("net.objecthunter:exp4j:0.4.8")

	modCompileOnly ("alexiil.mc.lib:libmultipart-all:0.8.0")

	modCompileOnly "dev.lambdaurora:lambdynamiclights:2.2.0+1.19.2"

	modCompileOnly("com.github.Virtuoel:Pehkui:3.6.3", {
		exclude group: "net.fabricmc.fabric-api"
	})

	modCompileOnly 'dev.lazurite:rayon-fabric:1.6.1'
}

checkstyle {
	toolVersion = '10.7.0'
	ignoreFailures = false
	maxWarnings = project.checkstyle_max_warns as int
}

processResources {
	inputs.property "version", project.version

	filesMatching("quilt.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
/*publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}*/